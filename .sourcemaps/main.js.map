{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/list/contactlist.service.ts","../../src/pages/home/home.ts","../../src/pages/list/list.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;;;;;;;;;;;;;;;;;;ACV2C;AAEG;AACT;AAEN;AAG/B,IAAa,kBAAkB;IAG3B,uEAAuE;IACvE,4BAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAFtB,mBAAc,GAAG,eAAe,CAAC,CAAE,iBAAiB;IAE1B,CAAC;IAEnC,2CAAc,GAAd;QAEI,wCAAwC;QAExC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;aACpC,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,CAAC,IAAqB,EAArC,CAAqC,CAAC;aACvD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEzB,uCAAuC;IAE/C,CAAC;IAEO,wCAAW,GAAnB,UAAoB,KAAU;QAC1B,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC,yBAAyB;QACpE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAClD,CAAC;IAuCL,yBAAC;AAAD,CAAC;AA7DY,kBAAkB;IAD9B,yEAAU,EAAE;qCAKiB,2DAAI;GAJrB,kBAAkB,CA6D9B;AA7D8B;;;;;;;;;;;;;;;;;;;;;ACRW;AACI;AAM9C,IAAa,QAAQ;IAEnB,kBAAmB,OAAsB;QAAtB,YAAO,GAAP,OAAO,CAAe;IAEzC,CAAC;IAEH,eAAC;AAAD,CAAC;AANY,QAAQ;IAJpB,wEAAS,CAAC;QACT,QAAQ,EAAE,WAAW;OACG;KACzB,CAAC;aAGyC;AAI1C;SANY,QAAQ,e;;;;;;;;;;;;;;;;;;;;;ACPqB;AACgC;AACf;AAQ3D,IAAa,QAAQ;IAKnB,kBAAmB,OAAsB,EAAS,SAAoB,EAClD,eAAgC,EAAU,kBAAsC;QADpG,iBAqBC;QArBkB,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAClD,oBAAe,GAAf,eAAe,CAAiB;QAAU,uBAAkB,GAAlB,kBAAkB,CAAoB;QAClG,8EAA8E;QAC9E,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAE1C,gEAAgE;QAChE,IAAI,CAAC,KAAK,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,aAAa;YAC5E,mBAAmB,EAAE,MAAM,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;QAEnD,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,sBAAY,IAAI,YAAI,CAAC,YAAY,GAAG,YAAY,EAAhC,CAAgC,CAAC,CAAC;QAC/F,OAAO,CAAC,GAAG,CAAC,eAAe,GAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QACjD;;;;;;;;;QASA;IACJ,CAAC;IAEH;;;;;;;MAOE;IACA,gCAAa,GAAb;QACE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;YACpC,KAAK,EAAE,SAAS;YAChB,QAAQ,EAAE,kBAAkB;YAC5B,OAAO,EAAE,CAAC,IAAI,CAAC;SAClB,CAAC,CAAC;QAEH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IACH,eAAC;AAAD,CAAC;AA9CY,QAAQ;IAJpB,wEAAS,CAAC;QACT,QAAQ,EAAE,WAAW;OACG;KACzB,CAAC;gKAM4B,EAA0C;QACjC,KAA+D;AAwCrG;SA9CY,QAAQ,e;;;;;;;;;;;ACVsD;AAElC;AAEzC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACJM;AACH;AACkB;AACF;AAC/B;AACM;AACA;AAEO;AACM;AAChB;AA0B3C,IAAa,SAAS;IAAtB;IAAwB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAZ,SAAS;IAxBrB,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,6DAAK;YACL,kEAAQ;YACR,kEAAQ;SACT;QACD,OAAO,EAAE;YACP,gFAAa;YACb,kEAAW,CAAC,OAAO,CAAC,6DAAK,CAAC;YAC1B,iEAAU;SACX;QACD,SAAS,EAAE,CAAC,+DAAQ,CAAC;QACrB,eAAe,EAAE;YACf,6DAAK;YACL,kEAAQ;YACR,kEAAQ;SACT;QACD,SAAS,EAAE;YACT,2EAAS;YACT,iFAAY;YACZ,2FAAkB;YAClB,EAAC,OAAO,EAAE,mEAAY,EAAE,QAAQ,EAAE,wEAAiB,EAAC;SACrD;KACF,CAAC;GACW,SAAS,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACpC+B;AACP;AACO;AACM;AAEb;AACA;AAK9C,IAAa,KAAK;IAOhB,eAAmB,QAAkB,EAAS,SAAoB,EAAS,YAA0B;QAAlF,aAAQ,GAAR,QAAQ,CAAU;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAJrG,aAAQ,GAAQ,kEAAQ,CAAC;QAKvB,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,8CAA8C;QAC9C,IAAI,CAAC,KAAK,GAAG;YACX,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAQ,EAAE;YACtC,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAQ,EAAE;SACvC,CAAC;IAEJ,CAAC;IAED,6BAAa,GAAb;QAAA,iBAOC;QANC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACzB,gEAAgE;YAChE,iEAAiE;YACjE,KAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;YAC9B,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wBAAQ,GAAR,UAAS,IAAI;QACX,+CAA+C;QAC/C,4DAA4D;QAC5D,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;IACH,YAAC;AAAD,CAAC;AA/BiB;IAAf,0EAAS,CAAC,0DAAG,CAAC;8BAAM,0DAAG;kCAAC;AADd,KAAK;IAHjB,wEAAS,CAAC;OACc;KACxB,CAAC;UAQqG;AAyBtG;SAhCY,KAAK,2B","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 106;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 106\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 148;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 148\n// module chunks = 0","import { Injectable } from '@angular/core';\r\nimport { Contactlist } from './contactlist';\r\nimport { Headers, Http } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Observable }     from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class ContactlistService {\r\n\r\n    private contactlistUrl = './contactlist';  // URL to web api\r\n    // private headers = new Headers({'Content-Type': 'application/json'});\r\n    constructor(private http: Http) { }\r\n\r\n    getContactlist(): Promise<Contactlist[]> {\r\n\r\n        //return Promise.resolve(ContactlistES);\r\n        \r\n        return this.http.get(this.contactlistUrl)\r\n            .toPromise()\r\n            .then(response => response.json().data as Contactlist[])\r\n            .catch(this.handleError);\r\n            \r\n            // private contactlists: Contactlist[];\r\n            \r\n    }\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        console.error('An error occurred', error); // for demo purposes only\r\n        return Promise.reject(error.message || error);\r\n    }\r\n\r\n/*\r\n    getContactlist(id: number): Promise<Contactlist> {\r\n        const url = `${this.contactlistUrl}/${id}`;\r\n        return this.http.get(url)\r\n            .toPromise()\r\n            .then(response => response.json().data as Contactlist)\r\n            .catch(this.handleError);\r\n    }\r\n*/\r\n/*\r\n    update(Contactlist: Contactlist): Promise<Contactlist> {\r\n        const url = `${this.contactlistUrl}/${Contactlist.id}`;\r\n        return this.http\r\n            .put(url, JSON.stringify(Contactlist), { headers: this.headers })\r\n            .toPromise()\r\n            .then(() => Contactlist)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    create(name: string): Promise<Contactlist> {\r\n        return this.http\r\n        .post(this.contactlistUrl, JSON.stringify({name: name}), {headers: this.headers})\r\n        .toPromise()\r\n        .then(res => res.json().data as Contactlist)\r\n        .catch(this.handleError)\r\n    }\r\n    */\r\n/*\r\n    delete(id: number): Promise<void>{\r\n        const url = `${this.contactlistUrl}/${id}`;\r\n        return this.http.delete(url, {headers: this.headers})\r\n        .toPromise()\r\n        .then(()=> null)\r\n        .catch(this.handleError);\r\n    }\r\n*/\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list/contactlist.service.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams, AlertController } from 'ionic-angular';\nimport { ContactlistService } from './contactlist.service';\nimport { Contactlist } from './contactlist';\n\n\n@Component({\n  selector: 'page-list',\n  templateUrl: 'list.html'\n})\nexport class ListPage {\n  selectedItem: any;\n  icons: string[];\n  contactlists: Contactlist[];\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, \n              private alertController: AlertController, private contactlistService: ContactlistService) {\n    // If we navigated to this page, we will have an item available as a nav param\n    this.selectedItem = navParams.get('item');\n\n    // Let's populate this page with some filler content for funzies\n    this.icons = ['flask', 'wifi', 'beer', 'football', 'basketball', 'paper-plane',\n      'american-football', 'boat', 'bluetooth', 'build'];\n\n      this.contactlistService.getContactlist().then(contactlists => this.contactlists = contactlists);\n       console.log('contactlists:'+ this.contactlists);\n      /*\n    this.items = [];\n    for (let i = 1; i < 11; i++) {\n      this.items.push({\n        title: 'Item ' + i,\n        note: 'This is item #' + i,\n        icon: this.icons[Math.floor(Math.random() * this.icons.length)]\n      });\n    }\n    */\n  }\n\n/*\n  itemTapped(event, item) {\n    // That's right, we're pushing to ourselves!\n    this.navCtrl.push(ListPage, {\n      item: item\n    });\n  }\n*/\n  toogleClicked() {\n    console.log(\"toogle changed\");\n    let alert = this.alertController.create({\n        title: 'Example',\n        subTitle: 'Example subtitle',\n        buttons: ['OK']\n    });\n\n    alert.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list/list.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { ContactlistService } from '../pages/list/contactlist.service';\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { ListPage } from '../pages/list/list';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { HttpModule } from '@angular/http';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    ListPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    HttpModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    ListPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    ContactlistService,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { Nav, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\nimport { ListPage } from '../pages/list/list';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n\n  rootPage: any = HomePage;\n\n  pages: Array<{title: string, component: any}>;\n\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen) {\n    this.initializeApp();\n\n    // used for an example of ngFor and navigation\n    this.pages = [\n      { title: 'Home', component: HomePage },\n      { title: 'List', component: ListPage }\n    ];\n\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}